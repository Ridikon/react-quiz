{"version":3,"sources":["components/Navigation/Drawer/Drawer.module.scss","components/FinishedQuiz/FinishedQuiz.module.scss","components/UI/Button/Button.module.scss","containers/Auth/Auth.module.scss","components/Navigation/MenuToggle/MenuToggle.module.scss","containers/Quiz/Quiz.module.scss","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.module.scss","components/ActiveQuiz/ActiveQuiz.module.scss","components/UI/Loader/Loader.module.scss","containers/QuizCreator/QuizCreator.module.scss","components/UI/Input/Input.module.scss","hoc/Layout/Layout.module.scss","components/UI/Backdrop/Backdrop.module.scss","components/ActiveQuiz/AnswersList/AnswersList.module.scss","components/UI/Select/Select.module.scss","containers/QuizList/QuizList.module.scss","components/Navigation/MenuToggle/MenuToggle.js","components/UI/Backdrop/Backdrop.js","components/Navigation/Drawer/Drawer.js","hoc/Layout/Layout.js","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.js","components/ActiveQuiz/AnswersList/AnswersList.js","components/ActiveQuiz/ActiveQuiz.js","components/UI/Button/Button.js","components/FinishedQuiz/FinishedQuiz.js","components/UI/Loader/Loader.js","axios/axios-quiz.js","store/actions/actionTypes.js","store/actions/quiz.js","containers/Quiz/Quiz.js","form/formFramework.js","components/UI/Input/Input.js","hoc/Auxiliary/Auxiliary.js","components/UI/Select/Select.js","containers/QuizCreator/QuizCreator.js","store/actions/create.js","store/actions/auth.js","containers/Auth/Auth.js","containers/QuizList/QuizList.js","components/Logout/Logout.js","App.js","serviceWorker.js","store/reducers/quiz.js","store/reducers/create.js","store/reducers/auth.js","store/reducers/rootReducer.js","index.js"],"names":["module","exports","Drawer","close","active","FinishedQuiz","success","error","Button","primary","disabled","mr15","Auth","AuthForm","MenuToggle","open","Quiz","QuizWrapper","AnswerItem","ActiveQuiz","Question","Loader","lds-ripple","center","QuizCreator","Input","invalid","Layout","Backdrop","AnswersList","Select","QuizList","props","cls","classes","isOpen","push","react_default","a","createElement","react_fontawesome_index_es","icon","faTimes","faBars","onClick","onToggle","className","join","links","_this","this","map","link","index","key","react_router_dom","to","exact","activeClassName","onClose","label","isAuth","Fragment","renderLinks","UI_Backdrop_Backdrop","Component","state","menu","toggleMenuHandler","setState","menuCloseHandler","Navigation_Drawer_Drawer","Navigation_MenuToggle_MenuToggle","children","connect","auth","token","onAnswerClick","answer","id","text","answers","AnswersList_AnswerItem_AnswerItem","answerNumber","question","quizLength","ActiveQuiz_AnswersList_AnswersList","useClass","type","successCount","Object","keys","results","reduce","total","quiz","quizItem","faCheck","length","UI_Button_Button","onRetry","axios","create","baseURL","FETCH_QUIZES_START","FETCH_QUIZES_SUCCESS","FETCH_QUIZES_ERROR","FETCH_QUIZ_SUCCESS","QUIZ_SET_STATE","QUIZ_FINISH","QUIZ_NEXT_QUESTION","QUIZ_RETRY","CREATE_QUIZ_QUESTION","RESET_QUIZ_CREATION","AUTH_SUCCESS","AUTH_LOGOUT","fetchQuizSuccess","fetchQuizesStart","fetchQuizesSuccess","quizes","fetchQuizesError","e","quizSetState","answerState","quizAnswerClick","answerId","dispatch","getState","activeQuestion","rightAnswerId","defineProperty","timeout","window","setTimeout","number","isQuizFinished","clearTimeout","fetchQuizById","match","params","retryQuiz","isFinished","loading","UI_Loader_Loader","components_FinishedQuiz_FinishedQuiz","components_ActiveQuiz_ActiveQuiz","quizId","_ref2","asyncToGenerator","regenerator_default","mark","_callee2","response","wrap","_context2","prev","next","get","concat","sent","data","t0","stop","_x2","apply","arguments","createControl","config","validation","objectSpread","valid","touched","value","validateForm","formControls","isFormValid","control","hasOwnProperty","isInvalid","_ref","shouldValidate","inputType","htmlFor","Math","random","onChange","errorMessage","Auxiliary","options","option","createOptionControl","required","createFormControls","option1","option2","option3","option4","addQuestionHandler","event","preventDefault","_this$state$formContr","questionItem","createQuizQuestion","createQuizHandler","finishCreateQuiz","changeHandler","controlName","undefined","isValid","trim","validate","selectChangeHandler","target","_this2","Auxiliary_Auxiliary","UI_Input_Input","select","UI_Select_Select","renderControls","item","_callee","_context","post","_x","authSuccess","logout","localStorage","removeItem","autoLogout","time","email","password","minLength","loginHandler","registerHandler","submitHandler","is","validateControl","forEach","name","onChangeHandler","onSubmit","renderInputs","isLogin","authData","url","expirationDate","returnSecureToken","Date","getTime","expiresIn","setItem","idToken","localId","console","log","fetchQuizes","renderQuizes","Logout","react_router","App","autoLogin","routes","path","component","hoc_Layout_Layout","withRouter","getItem","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","initialState","combineReducers","action","toConsumableArray","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","app","es","src_App_0","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.282674d9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Drawer\":\"Drawer_Drawer__k9oZ1\",\"close\":\"Drawer_close__157sK\",\"active\":\"Drawer_active__2oACK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FinishedQuiz\":\"FinishedQuiz_FinishedQuiz__2aARn\",\"success\":\"FinishedQuiz_success__2EeEd\",\"error\":\"FinishedQuiz_error__2PlTT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2Ajf-\",\"error\":\"Button_error__A4xET\",\"success\":\"Button_success__qdwm8\",\"primary\":\"Button_primary__CVuDV\",\"disabled\":\"Button_disabled__1OC_4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mr15\":\"Auth_mr15__7NKof\",\"Auth\":\"Auth_Auth__7JmWy\",\"AuthForm\":\"Auth_AuthForm__2fbR6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuToggle\":\"MenuToggle_MenuToggle__21_pH\",\"open\":\"MenuToggle_open__3GTM9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"Quiz_Quiz__2THIz\",\"QuizWrapper\":\"Quiz_QuizWrapper__2wTef\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswerItem\":\"AnswerItem_AnswerItem__uovHA\",\"success\":\"AnswerItem_success__XCXzE\",\"error\":\"AnswerItem_error__2qb2c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActiveQuiz\":\"ActiveQuiz_ActiveQuiz__2OH8k\",\"Question\":\"ActiveQuiz_Question__3-k9k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__3cxM3\",\"lds-ripple\":\"Loader_lds-ripple__20g5-\",\"center\":\"Loader_center__3DNW3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mr15\":\"QuizCreator_mr15__1qfUR\",\"QuizCreator\":\"QuizCreator_QuizCreator__2CeNk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__SNRl4\",\"invalid\":\"Input_invalid__1ZOur\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__ACkHP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__Vem4f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswersList\":\"AnswersList_AnswersList__1ulOJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Select\":\"Select_Select__26ooE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizList\":\"QuizList_QuizList__EsJjC\"};","import React from 'react'\nimport classes from './MenuToggle.module.scss'\nimport { faTimes, faBars } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst MenuToggle = props => {\n    const cls = [\n        classes.MenuToggle\n    ];\n\n    if (props.isOpen) {\n        cls.push(classes.open)\n    }\n\n    return (\n        <FontAwesomeIcon icon={props.isOpen ? faTimes : faBars}\n                         onClick={props.onToggle}\n                         className={cls.join(' ')}/>\n    )\n};\n\nexport default MenuToggle\n","import React from 'react'\nimport classes from './Backdrop.module.scss'\n\nconst Backdrop = props => <div className={classes.Backdrop} onClick={props.onClick}></div>\n\nexport default Backdrop\n","import React, { Component } from 'react'\nimport classes from './Drawer.module.scss'\nimport Backdrop from \"../../UI/Backdrop/Backdrop\";\nimport { NavLink } from \"react-router-dom\";\n\nclass Drawer extends Component {\n    renderLinks(links) {\n        return links.map((link, index) => {\n            return (\n                <li key={index}>\n                    <NavLink\n                        to={link.to}\n                        exact={link.exact}\n                        activeClassName={classes.active}\n                        onClick={this.props.onClose}\n                    >\n                        {link.label}\n                    </NavLink>\n                </li>\n            )\n        })\n    }\n\n    render() {\n        const cls = [classes.Drawer];\n\n        if (!this.props.isOpen) {\n            cls.push(classes.close)\n        }\n\n        const links = [\n            {to: '/', label: 'Список', exact: true}\n        ];\n        \n        if (this.props.isAuth) {\n            links.push({to: '/quiz-creator', label: 'Створити тест', exact: false});\n            links.push({to: '/logout', label: 'Вийти', exact: false})\n        } else {\n            links.push({to: '/auth', label: 'Авторизація', exact: false})\n        }\n\n        return (\n            <React.Fragment>\n                <nav className={cls.join(' ')}>\n                    <ul>\n                        {this.renderLinks(links)}\n                    </ul>\n                </nav>\n                { this.props.isOpen ? <Backdrop onClick={this.props.onClose}/> : null }\n            </React.Fragment>\n\n        )\n    }\n}\n\nexport default Drawer\n","import React, { Component } from 'react'\nimport classes from './Layout.module.scss'\nimport MenuToggle from \"../../components/Navigation/MenuToggle/MenuToggle\";\nimport Drawer from \"../../components/Navigation/Drawer/Drawer\";\nimport { connect } from \"react-redux\";\n\nclass Layout extends Component {\n\n    state = {\n        menu: false\n    }\n\n    toggleMenuHandler = () => {\n        this.setState({\n            menu: !this.state.menu\n        })\n    };\n\n    menuCloseHandler = () => {\n        this.setState({\n            menu: false\n        })\n    };\n\n    render() {\n        return (\n            <div className={classes.Layout}>\n\n                <Drawer isAuth={this.props.isAuth} isOpen={this.state.menu} onClose={this.menuCloseHandler}/>\n\n                <MenuToggle\n                    onToggle={this.toggleMenuHandler}\n                    isOpen={this.state.menu}\n                />\n\n                <main>\n                    {this.props.children}\n                </main>\n            </div>\n        )\n    }\n}\nfunction mapStateToProps(state) {\n    return {\n        isAuth: !!state.auth.token\n    }\n}\nexport default connect(mapStateToProps)(Layout);\n","import React from 'react'\nimport classes from './AnswerItem.module.scss'\n\nconst AnswerItem = props => {\n    const cls = [classes.AnswerItem];\n\n    if (props.state) {\n        cls.push(classes[props.state])\n    }\n\n    return (\n        <li\n            className={cls.join(' ')}\n            onClick={() => props.onAnswerClick(props.answer.id)}\n        >\n            {props.answer.text}\n        </li>\n    )\n};\n\nexport default AnswerItem\n","import React from 'react'\nimport AnswerItem from './AnswerItem/AnswerItem'\nimport classes from './AnswersList.module.scss'\n\nconst AnswersList = props => (\n    <ul className={classes.AnswersList}>\n        { props.answers.map((answer, index) => {\n            return (\n                <AnswerItem\n                    key={index}\n                    answer={answer}\n                    onAnswerClick={props.onAnswerClick}\n                    state={props.state ? props.state[answer.id] : null}\n                />\n            )\n        })}\n    </ul>\n)\n\nexport default AnswersList\n","import React from 'react'\nimport AnswersList from './AnswersList/AnswersList'\nimport classes from './ActiveQuiz.module.scss'\n\nconst ActiveQuiz = props => (\n    <div className={classes.ActiveQuiz}>\n        <p className={classes.Question}>\n            <span>\n                <strong>{props.answerNumber}.</strong>&nbsp;\n                {props.question}\n            </span>\n\n            <small>{props.answerNumber} з {props.quizLength}</small>\n        </p>\n\n        <AnswersList\n            state={props.state}\n            answers={props.answers}\n            onAnswerClick={props.onAnswerClick}\n        />\n    </div>\n);\n\nexport default ActiveQuiz\n\n","import React from 'react'\nimport classes from './Button.module.scss'\n\nconst Button = props => {\n    const cls = [\n        props.useClass,\n        classes.Button,\n        classes[props.type]\n    ];\n\n    if (props.disabled) {\n        cls.push(classes.disabled)\n    }\n\n    return (\n            <button\n                className={cls.join(' ')}\n                onClick={props.onClick}\n                disabled={props.disabled}\n            >{props.children}</button>\n    )\n};\n\nexport default Button\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes, faCheck } from '@fortawesome/free-solid-svg-icons'\nimport classes from './FinishedQuiz.module.scss'\nimport Button from '../UI/Button/Button'\nimport {Link} from \"react-router-dom\";\n\nconst FinishedQuiz = props => {\n    const successCount = Object.keys(props.results).reduce((total, key) => {\n        if (props.results[key] === 'success') {\n            total++\n        }\n\n        return total;\n    }, 0);\n\n    return (\n        <div className={classes.FinishedQuiz}>\n            <ul>\n                {props.quiz.map((quizItem, index) => {\n                    const cls = props.results[quizItem.id] !== 'error';\n\n                    return (\n                        <li key={index}>\n                            <strong>{index + 1}</strong>.&nbsp;\n                            {quizItem.question}\n                            <FontAwesomeIcon icon={cls ? faCheck : faTimes}\n                                             className={cls ? classes.success : classes.error}/>\n                        </li>\n                    )\n                })}\n            </ul>\n\n            <p>Вірні {successCount} з {props.quiz.length}</p>\n\n            <div>\n                <Button onClick={props.onRetry} type='primary'>Повторити</Button>\n                <Link to={'/quiz'}>\n                    <Button type='success'>Перейти в список тестів</Button>\n                </Link>\n            </div>\n        </div>\n    )\n};\n\nexport default FinishedQuiz\n","import React from 'react';\nimport classes from './Loader.module.scss'\n\nconst Loader = props => {\n    return (\n        <div className={classes.center}>\n            <div className={classes.Loader}>\n                <div/><div/>\n            </div>\n        </div>\n    );\n};\n\nexport default Loader;\n","import axios from 'axios'\n\nexport default axios.create({\n    baseURL: 'https://react-quiz-dabe2.firebaseio.com'\n})\n","export const FETCH_QUIZES_START = 'FETCH_QUIZES_START';\nexport const FETCH_QUIZES_SUCCESS = 'FETCH_QUIZES_SUCCESS';\nexport const FETCH_QUIZES_ERROR = 'FETCH_QUIZES_ERROR';\nexport const FETCH_QUIZ_SUCCESS = 'FETCH_QUIZ_SUCCESS';\n\nexport const QUIZ_SET_STATE = 'QUIZ_SET_STATE';\nexport const QUIZ_FINISH = 'QUIZ_FINISH';\nexport const QUIZ_NEXT_QUESTION = 'QUIZ_NEXT_QUESTION';\nexport const QUIZ_RETRY = 'QUIZ_RETRY';\n\nexport const CREATE_QUIZ_QUESTION = 'CREATE_QUIZ_QUESTION';\nexport const RESET_QUIZ_CREATION = 'RESET_QUIZ_CREATION';\n\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\n","import axios from '../../axios/axios-quiz'\nimport {\n    FETCH_QUIZ_SUCCESS,\n    FETCH_QUIZES_ERROR,\n    FETCH_QUIZES_START,\n    FETCH_QUIZES_SUCCESS, QUIZ_FINISH, QUIZ_NEXT_QUESTION, QUIZ_RETRY,\n    QUIZ_SET_STATE\n} from \"./actionTypes\";\n\nexport function fetchQuizes() {\n    return async dispatch => {\n        dispatch(fetchQuizesStart());\n        try {\n            const response = await axios.get('/quizes.json');\n            const quizes = [];\n\n            Object.keys(response.data).forEach((key, index) => {\n                quizes.push({\n                    id: key,\n                    name: `Тест ${index + 1}`\n                })\n            });\n\n            dispatch(fetchQuizesSuccess(quizes))\n        } catch (e) {\n            dispatch(fetchQuizesError(e))\n        }\n    }\n}\n\nexport function fetchQuizById(quizId) {\n    return async dispatch => {\n        dispatch(fetchQuizesStart())\n\n        try {\n            const response = await axios.get(`/quizes/${quizId}.json`);\n            const quiz = response.data;\n\n            dispatch(fetchQuizSuccess(quiz))\n        } catch (e) {\n            dispatch(fetchQuizesError(e))\n        }\n    }\n}\n\nexport function fetchQuizSuccess(quiz) {\n    return {\n        type: FETCH_QUIZ_SUCCESS,\n        quiz\n    }\n}\n\nexport function fetchQuizesStart() {\n    return {\n        type: FETCH_QUIZES_START\n    }\n}\n\nexport function fetchQuizesSuccess(quizes) {\n    return {\n        type: FETCH_QUIZES_SUCCESS,\n        quizes\n    }\n}\n\nexport function fetchQuizesError(e) {\n    return {\n        type: FETCH_QUIZES_ERROR,\n        error: e\n    }\n}\n\nexport function quizSetState(answerState, results) {\n    return {\n        type: QUIZ_SET_STATE,\n        answerState,\n        results\n    }\n}\n\nexport function finishQuiz() {\n    return {\n        type: QUIZ_FINISH\n    }\n}\n\nexport function quizNextQuestion(number) {\n    return {\n        type: QUIZ_NEXT_QUESTION,\n        number\n    }\n}\n\nexport function quizAnswerClick(answerId) {\n    return (dispatch, getState) => {\n        const state = getState().quiz;\n\n        if (state.answerState) {\n            const key = Object.keys(state.answerState)[0];\n\n            if (state.answerState[key] === 'success') {\n                return\n            }\n        }\n\n        const question = state.quiz[state.activeQuestion];\n        const results = state.results;\n\n        if (question.rightAnswerId === answerId) {\n            if (!results) {\n                results[answerId] = 'success'\n            } else {\n                results[question.id] = 'success'\n            }\n\n            dispatch(quizSetState({[answerId]: 'success'}, results))\n\n        } else {\n            results[question.id] = 'error';\n            dispatch(quizSetState({[answerId]: 'error'}, results))\n        }\n\n        const timeout = window.setTimeout(() => {\n            if (isQuizFinished(state)) {\n                dispatch(finishQuiz())\n            } else {\n                dispatch(quizNextQuestion(state.activeQuestion + 1))\n            }\n\n            window.clearTimeout(timeout)\n        }, 1000);\n    }\n}\n\nexport function retryQuiz() {\n    return {\n        type: QUIZ_RETRY\n    }\n}\n\nfunction isQuizFinished(state) {\n    return state.activeQuestion + 1 === state.quiz.length;\n}\n","import React, { Component } from 'react'\nimport classes from './Quiz.module.scss'\nimport ActiveQuiz from '../../components/ActiveQuiz/ActiveQuiz'\nimport FinishedQuiz from '../../components/FinishedQuiz/FinishedQuiz'\nimport Loader from \"../../components/UI/Loader/Loader\";\nimport { connect } from \"react-redux\";\nimport { fetchQuizById, retryQuiz, quizAnswerClick } from \"../../store/actions/quiz\";\n\nclass Quiz extends Component {\n    componentDidMount() {\n        this.props.fetchQuizById(this.props.match.params.id)\n    }\n\n    componentWillUnmount() {\n        this.props.retryQuiz()\n    }\n\n    render() {\n        return (\n            <div className={classes.Quiz}>\n                <div className={classes.QuizWrapper}>\n                    <h1>{this.props.isFinished ? 'Результат' : 'Дайте відповідь на всі запитання'}</h1>\n\n                    {\n                        this.props.loading || !this.props.quiz ? <Loader/> :\n                            this.props.isFinished\n                                ? <FinishedQuiz\n                                    results={this.props.results}\n                                    quiz={this.props.quiz}\n                                    onRetry={this.props.retryQuiz}\n                                />\n                                : <ActiveQuiz\n                                    answers={this.props.quiz[this.props.activeQuestion].answers}\n                                    question={this.props.quiz[this.props.activeQuestion].question}\n                                    onAnswerClick={this.props.quizAnswerClick}\n                                    quizLength={this.props.quiz.length}\n                                    answerNumber={this.props.activeQuestion + 1}\n                                    state={this.props.answerState}\n                                />\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        results: state.quiz.results,\n        isFinished: state.quiz.isFinished,\n        activeQuestion: state.quiz.activeQuestion,\n        answerState: state.quiz.answerState,\n        quiz: state.quiz.quiz,\n        loading: state.quiz.loading\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        fetchQuizById: id => dispatch(fetchQuizById(id)),\n        quizAnswerClick: answerId => dispatch(quizAnswerClick(answerId)),\n        retryQuiz: () => dispatch(retryQuiz())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Quiz)\n","export function createControl(config, validation) {\n    return {\n        ...config,\n        validation,\n        valid: !validation,\n        touched: false,\n        value: ''\n    }\n}\n\nexport function validate(value, validation = null) {\n    if (!validation) {\n        return true\n    }\n\n    let isValid = true;\n\n    if (validation.required) {\n        isValid = value.trim() !== '' && isValid\n    }\n\n    return isValid\n}\n\nexport function validateForm(formControls) {\n    let isFormValid = true;\n\n    for (let control in formControls) {\n        if (formControls.hasOwnProperty(control)) {\n            isFormValid = formControls[control].valid && isFormValid\n        }\n    }\n\n    return isFormValid\n}\n","import React from 'react';\nimport classes from './Input.module.scss'\n\nfunction isInvalid({valid, touched, shouldValidate}) {\n    return !valid && shouldValidate && touched\n}\n\nconst Input = props => {\n    const inputType = props.type || 'text';\n    const cls = [classes.Input];\n    const htmlFor = `${inputType}-${Math.random()}`;\n\n    if (isInvalid(props)) {\n        cls.push(classes.invalid)\n    }\n\n    return (\n        <div className={cls.join(' ')}>\n            <label htmlFor={htmlFor}>{props.label}</label>\n            <input\n                id={htmlFor}\n                type={inputType}\n                value={props.value}\n                onChange={props.onChange}\n            />\n\n            {\n                isInvalid(props) ? <span>{props.errorMessage || 'Введіть вірне значення'}</span> : null\n            }\n\n        </div>\n    );\n};\n\nexport default Input;\n","const Auxiliary = props => props.children;\n\nexport default Auxiliary\n","import React from 'react';\nimport classes from './Select.module.scss'\n\nconst Select = props => {\n    const htmlFor = `${props.label}-${Math.random()}`;\n    return (\n        <div className={classes.Select}>\n            <label htmlFor={htmlFor}>{props.label}</label>\n            <select\n                id={htmlFor}\n                value={props.value}\n                onChange={props.onChange}\n            >\n                {props.options.map((option, index) => {\n                    return (\n                        <option\n                            key={option.value + index}\n                            value={option.value}\n                        >\n                            {option.text}\n                        </option>\n                    )\n                })}\n            </select>\n        </div>\n    );\n};\n\nexport default Select;\n","import React, { Component } from 'react';\nimport classes from './QuizCreator.module.scss';\nimport Button from \"../../components/UI/Button/Button\";\nimport { createControl, validate, validateForm } from '../../form/formFramework';\nimport Input from \"../../components/UI/Input/Input\";\nimport Auxiliary from \"../../hoc/Auxiliary/Auxiliary\";\nimport Select from \"../../components/UI/Select/Select\";\nimport { connect } from \"react-redux\";\nimport { createQuizQuestion, finishCreateQuiz } from \"../../store/actions/create\";\n\nfunction createOptionControl(number) {\n    return createControl({\n        label: `Варіант ${number}`,\n        errorMessage: 'Значення не може бути порожнім',\n        id: number\n    }, { required: true })\n}\n\nfunction createFormControls() {\n    return {\n        question: createControl({\n            label: 'Введіть запитання',\n            errorMessage: 'Питання не може бути порожнім'\n        }, { required: true }),\n        option1: createOptionControl(1),\n        option2: createOptionControl(2),\n        option3: createOptionControl(3),\n        option4: createOptionControl(4)\n    }\n}\n\nclass QuizCreator extends Component {\n    state = {\n        isFormValid: false,\n        rightAnswerId: 1,\n        formControls: createFormControls()\n    };\n\n    addQuestionHandler = event => {\n        event.preventDefault();\n\n        const { question, option1, option2, option3, option4 } = this.state.formControls;\n\n        const questionItem = {\n            question: question.value,\n            id: this.props.quiz.length + 1,\n            rightAnswerId: this.state.rightAnswerId,\n            answers: [\n                { text: option1.value, id: option1.id },\n                { text: option2.value, id: option2.id },\n                { text: option3.value, id: option3.id },\n                { text: option4.value, id: option4.id },\n            ]\n        };\n\n        this.props.createQuizQuestion(questionItem);\n\n        this.setState({\n            isFormValid: false,\n            rightAnswerId: 1,\n            formControls: createFormControls()\n        })\n    };\n\n    createQuizHandler = event => {\n        event.preventDefault();\n\n        this.setState({\n            isFormValid: false,\n            rightAnswerId: 1,\n            formControls: createFormControls()\n        });\n\n        this.props.finishCreateQuiz()\n    };\n\n    changeHandler = (value, controlName) => {\n        const formControls = { ...this.state.formControls };\n        const control = { ...formControls[controlName] };\n\n        control.touched = true;\n        control.value = value;\n        control.valid = validate(control.value, control.validation);\n\n        formControls[controlName] = control;\n\n        this.setState({\n            formControls,\n            isFormValid: validateForm(formControls)\n        })\n    };\n\n    renderControls() {\n        return Object.keys(this.state.formControls).map((controlName, index) => {\n            const control = this.state.formControls[controlName];\n\n            return (\n                <Auxiliary key={controlName + index}>\n                    <Input\n                        label={control.label}\n                        value={control.value}\n                        valid={control.valid}\n                        shouldValidate={!!control.validation}\n                        touched={control.touched}\n                        errorMessage={control.errorMessage}\n                        onChange={event => this.changeHandler(event.target.value, controlName)}\n                    />\n\n                    {index === 0 ? <hr/> : null}\n                </Auxiliary>\n            )\n        })\n    }\n\n    selectChangeHandler = event => {\n        this.setState({\n            rightAnswerId: +event.target.value\n        })\n    };\n\n    render() {\n        const select = <Select\n            label={'Виберіть правильну відповідь'}\n            value={this.state.rightAnswerId}\n            onChange={this.selectChangeHandler}\n            options={[\n                { text: 1, value: 1 },\n                { text: 2, value: 2 },\n                { text: 3, value: 3 },\n                { text: 4, value: 4 }\n            ]}\n        />;\n\n        return (\n            <div className={classes.QuizCreator}>\n                <div>\n                    <h1>Створення тесту</h1>\n\n                    <form>\n\n                        {this.renderControls()}\n\n                        {select}\n\n                        <Button\n                            useClass={classes.mr15}\n                            type='primary'\n                            onClick={this.addQuestionHandler}\n                            disabled={!this.state.isFormValid}\n                        >\n                            Добавити запитання\n                        </Button>\n\n                        <Button\n                            type='success'\n                            onClick={this.createQuizHandler}\n                            disabled={this.props.quiz.length === 0}\n                        >\n                            Створити тест\n                        </Button>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        quiz: state.create.quiz\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        createQuizQuestion: item => dispatch(createQuizQuestion(item)),\n        finishCreateQuiz: () => dispatch(finishCreateQuiz())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizCreator);\n","import { CREATE_QUIZ_QUESTION, RESET_QUIZ_CREATION } from \"./actionTypes\";\nimport axios from \"../../axios/axios-quiz\";\n\nexport function createQuizQuestion(item) {\n    return {\n        type: CREATE_QUIZ_QUESTION,\n        item\n    }\n}\n\nexport function resetQuizCreation() {\n    return {\n        type: RESET_QUIZ_CREATION\n    }\n}\n\nexport function finishCreateQuiz() {\n    return async (dispatch, getState) => {\n        await axios.post('/quizes.json', getState().create.quiz);\n\n        dispatch(resetQuizCreation())\n    }\n}\n","import axios from 'axios'\nimport { AUTH_LOGOUT, AUTH_SUCCESS } from \"./actionTypes\";\n\nexport function auth(email, password, isLogin) {\n    return async dispatch => {\n        const authData = {\n            email,\n            password,\n            returnSecureToken: true\n        };\n\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyD3osZsNT40JuJXGWXfEVPEJ7NOIBEBRnI'\n\n        if (isLogin) {\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyD3osZsNT40JuJXGWXfEVPEJ7NOIBEBRnI'\n        }\n\n        try {\n            const response = await axios.post(url, authData);\n            const data = response.data;\n\n            const expirationDate = new Date(new Date().getTime() + data.expiresIn * 1000);\n\n            localStorage.setItem('token', data.idToken);\n            localStorage.setItem('userId', data.localId);\n            localStorage.setItem('expirationDate', expirationDate);\n\n            dispatch(authSuccess(data.idToken))\n            dispatch(autoLogout(data.expiresIn))\n        } catch (e) {\n            console.log(e)\n        }\n    }\n}\n\nexport function authSuccess(token) {\n    return {\n        type: AUTH_SUCCESS,\n        token\n    }\n}\n\nexport function logout() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('userId');\n    localStorage.removeItem('expirationDate');\n\n    return {\n        type: AUTH_LOGOUT\n    }\n}\n\nexport function autoLogout(time) {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(logout())\n        }, time * 1000)\n    }\n}\n\nexport function autoLogin() {\n    return async dispatch => {\n        const token = localStorage.getItem('token');\n\n        if (!token) {\n            dispatch(logout())\n        } else {\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\n\n            if (expirationDate <= new Date()) {\n                dispatch(logout())\n            } else {\n                dispatch(authSuccess(token));\n                dispatch(autoLogout((expirationDate.getTime() - new Date().getTime()) / 1000))\n            }\n        }\n    }\n}\n","import React, { Component } from 'react';\nimport classes from './Auth.module.scss'\nimport Button from \"../../components/UI/Button/Button\";\nimport Input from \"../../components/UI/Input/Input\";\nimport is from 'is_js'\nimport { connect } from \"react-redux\";\nimport { auth } from \"../../store/actions/auth\";\n\nclass Auth extends Component {\n    state = {\n        isFormValid: false,\n        formControls: {\n            email: {\n                value: '',\n                type: 'email',\n                label: 'Email',\n                errorMessage: 'Введіть коректний email',\n                valid: false,\n                touched: false,\n                validation: {\n                    required: true,\n                    email: true\n                }\n            },\n            password: {\n                value: '',\n                type: 'password',\n                label: 'Пароль',\n                errorMessage: 'Введіть коректний пароль',\n                valid: false,\n                touched: false,\n                validation: {\n                    required: true,\n                    minLength: 6\n                }\n            }\n        }\n    };\n\n    loginHandler = () => {\n        this.props.auth(\n            this.state.formControls.email.value,\n            this.state.formControls.password.value,\n            true\n        );\n    };\n\n    registerHandler = () => {\n        this.props.auth(\n            this.state.formControls.email.value,\n            this.state.formControls.password.value,\n            false\n        );\n    };\n\n    submitHandler = event => {\n        event.preventDefault()\n    };\n\n    validateControl(value, validation) {\n        if (!validation) {\n            return true\n        }\n\n        let isValid = true;\n\n        if (validation.required) {\n            isValid = value.trim() !== '' && isValid\n        }\n\n        if (validation.email) {\n            isValid = is.email(value) && isValid\n        }\n\n        if (validation.minLength) {\n            isValid = value.length >= validation.minLength && isValid\n        }\n\n        return isValid\n    }\n\n    onChangeHandler(event, controlName) {\n        const formControls = {...this.state.formControls};\n        const control = {...formControls[controlName]};\n\n        control.value = event.target.value;\n        control.touched = true;\n        control.valid = this.validateControl(control.value, control.validation);\n\n        formControls[controlName] = control;\n\n        let isFormValid = true;\n\n        Object.keys(formControls).forEach(name => {\n            isFormValid = formControls[name].valid && isFormValid\n        });\n\n        this.setState({\n            formControls, isFormValid\n        })\n    };\n\n    renderInputs() {\n        return Object.keys(this.state.formControls).map((controlName, index) => {\n            const control = this.state.formControls[controlName];\n            return (\n                <Input\n                    key={controlName + index}\n                    label={control.label}\n                    type={control.type}\n                    value={control.value}\n                    valid={control.valid}\n                    touched={control.touched}\n                    shouldValidate={!!control.validation}\n                    errorMessage={control.errorMessage}\n                    onChange={event => this.onChangeHandler(event, controlName)}\n                />\n            )\n        })\n    }\n\n    render() {\n        return (\n            <div className={classes.Auth}>\n                <div>\n                    <h1>Авторизація</h1>\n\n                    <form onSubmit={this.submitHandler} className={classes.AuthForm}>\n\n                        { this.renderInputs()}\n\n                        <Button\n                            useClass={classes.mr15}\n                            type='success'\n                            onClick={this.loginHandler}\n                            disabled={!this.state.isFormValid}\n                        >\n                            Увійти\n                        </Button>\n                        <Button\n                            type='primary'\n                            onClick={this.registerHandler}\n                            disabled={!this.state.isFormValid}\n                        >\n                            Зареєструватися\n                        </Button>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        auth: (email, password, isLogin) => dispatch(auth(email, password, isLogin))\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(Auth);\n","import React, { Component } from 'react';\nimport classes from './QuizList.module.scss'\nimport { NavLink } from \"react-router-dom\";\nimport Loader from \"../../components/UI/Loader/Loader\";\nimport { connect } from \"react-redux\";\nimport { fetchQuizes } from \"../../store/actions/quiz\";\n\nclass QuizList extends Component {\n\n    renderQuizes() {\n        return this.props.quizes.map(quiz => {\n            return (\n                <li\n                    key={quiz.id}\n                >\n                    <NavLink to={'/quiz/' + quiz.id}>\n                        {quiz.name}\n                    </NavLink>\n                </li>\n            )\n        })\n    }\n\n    componentDidMount() {\n        this.props.fetchQuizes()\n    }\n\n    render() {\n        return (\n            <div className={classes.QuizList}>\n                <div>\n                    <h1>Список тестів</h1>\n\n                    {this.props.loading && this.props.quizes.length !== 0 ? <Loader/> :\n                        <ul>\n                            {this.renderQuizes()}\n                        </ul>\n                    }\n\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        quizes: state.quiz.quizes,\n        loading: state.quiz.loading\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        fetchQuizes: () => dispatch(fetchQuizes())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizList);\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../store/actions/auth\";\nimport { Redirect } from \"react-router-dom\";\n\nclass Logout extends Component {\n    componentDidMount() {\n        this.props.logout()\n    }\n\n    render() {\n        return (\n            <Redirect to='/'/>\n        );\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        logout: () => dispatch(logout())\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(Logout);\n","import React, { Component } from 'react';\nimport Layout from './hoc/Layout/Layout'\nimport { Redirect, Route, Switch, withRouter } from 'react-router-dom'\nimport Quiz from './containers/Quiz/Quiz'\nimport './App.scss';\nimport QuizCreator from \"./containers/QuizCreator/QuizCreator\";\nimport Auth from \"./containers/Auth/Auth\";\nimport QuizList from \"./containers/QuizList/QuizList\";\nimport { connect } from \"react-redux\";\nimport Logout from \"./components/Logout/Logout\";\nimport { autoLogin } from \"./store/actions/auth\";\n\nclass App extends Component {\n    componentDidMount() {\n        this.props.autoLogin()\n    }\n\n    render() {\n        let routes = (\n            <Switch>\n                <Route path='/auth' component={Auth}/>\n                <Route path='/quiz/:id' component={Quiz}/>\n                <Route path='/' exact component={QuizList}/>\n                <Redirect to='/'/>\n            </Switch>\n        );\n\n        if (this.props.isAuth) {\n            routes = (\n                <Switch>\n                    <Route path='/quiz-creator' component={QuizCreator}/>\n                    <Route path='/quiz/:id' component={Quiz}/>\n                    <Route path='/logout' component={Logout}/>\n                    <Route path='/' exact component={QuizList}/>\n                    <Redirect to='/'/>\n                </Switch>\n            )\n        }\n\n        return (\n            <Layout>\n                {routes}\n            </Layout>\n        );\n    }\n\n}\n\nfunction mapStateToProps(state) {\n    return {\n        isAuth: !!state.auth.token\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        autoLogin: () => dispatch(autoLogin())\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n    FETCH_QUIZ_SUCCESS,\n    FETCH_QUIZES_ERROR,\n    FETCH_QUIZES_START,\n    FETCH_QUIZES_SUCCESS,\n    QUIZ_FINISH,\n    QUIZ_NEXT_QUESTION, QUIZ_RETRY,\n    QUIZ_SET_STATE\n} from \"../actions/actionTypes\";\n\nconst initialState = {\n    quizes: [],\n    loading: false,\n    error: null,\n    results: {},\n    isFinished: false,\n    activeQuestion: 0,\n    answerState: null,\n    quiz: null\n};\n\nexport default function quizReducer(state = initialState, action) {\n    switch (action.type) {\n        case FETCH_QUIZES_START:\n            return {\n                ...state,\n                loading: true\n            };\n        case FETCH_QUIZES_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                quizes: action.quizes\n            };\n        case FETCH_QUIZES_ERROR:\n            return {\n                ...state,\n                loading: false,\n                error: action.error\n            };\n        case FETCH_QUIZ_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                quiz: action.quiz\n            };\n        case QUIZ_SET_STATE:\n            return {\n                ...state,\n                answerState: action.answerState,\n                results: action.results\n            };\n        case QUIZ_FINISH:\n            return {\n                ...state,\n                isFinished: true\n            };\n        case QUIZ_NEXT_QUESTION:\n            return {\n                ...state,\n                activeQuestion: action.number,\n                answerState: null\n            };\n        case QUIZ_RETRY:\n            return {\n                ...state,\n                isFinished: false,\n                activeQuestion: 0,\n                answerState: null,\n                results: {}\n            };\n        default:\n            return state\n    }\n}\n","import { CREATE_QUIZ_QUESTION, RESET_QUIZ_CREATION } from \"../actions/actionTypes\";\n\nconst initialState = {\n    quiz: []\n};\n\nexport default function createReducer (state = initialState, action) {\n    switch (action.type) {\n        case CREATE_QUIZ_QUESTION:\n            return {\n                ...state,\n              quiz: [...state.quiz, action.item]\n            };\n        case RESET_QUIZ_CREATION:\n            return {\n                ...state,\n                quiz: []\n            }\n        default:\n            return state\n    }\n}\n","import { AUTH_LOGOUT, AUTH_SUCCESS } from \"../actions/actionTypes\";\n\nconst initialState = {\n    token: null\n};\n\nexport default function authReducer(state = initialState, action) {\n    switch (action.type) {\n        case AUTH_SUCCESS:\n            return {\n                ...state,\n                token: action.token\n            };\n        case AUTH_LOGOUT:\n            return {\n                ...state,\n                token: null\n            };\n        default:\n            return state\n    }\n}\n","import {combineReducers} from 'redux'\nimport quizReducer from './quiz'\nimport createReducer from \"./create\";\nimport authReducer from \"./auth\";\n\nexport default combineReducers({\n    quiz: quizReducer,\n    create: createReducer,\n    auth: authReducer\n})\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, compose, applyMiddleware} from 'redux'\nimport {Provider} from 'react-redux'\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport thunk from 'redux-thunk'\n\nconst composeEnhancers =\n    typeof window === 'object' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n        }) : compose;\n\nconst store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware(thunk)\n    )\n);\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\nserviceWorker.register();\n"],"sourceRoot":""}